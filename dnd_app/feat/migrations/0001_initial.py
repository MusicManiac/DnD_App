# Generated by Django 5.1.7 on 2025-04-12 13:46

import django.db.models.deletion
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("common", "0001_initial"),
        ("skill", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TypeOfFeat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=3000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("benefit", models.TextField(max_length=2000)),
                ("normal", models.TextField(blank=True, max_length=1000, null=True)),
                ("special", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "other_prerequisites",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeatAbilityPrerequisite",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "required_ability_value",
                    models.IntegerField(
                        default=10,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                (
                    "ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="common.ability"
                    ),
                ),
                (
                    "feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feat.feat"
                    ),
                ),
            ],
            options={
                "unique_together": {("feat", "ability")},
            },
        ),
        migrations.AddField(
            model_name="feat",
            name="ability_prerequisite",
            field=models.ManyToManyField(
                blank=True, through="feat.FeatAbilityPrerequisite", to="common.ability"
            ),
        ),
        migrations.CreateModel(
            name="FeatFeatPrerequisite",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "prerequisite",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="prerequisites",
                        to="feat.feat",
                    ),
                ),
                (
                    "prerequisite_for_feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prerequisite_for",
                        to="feat.feat",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Feat prerequisites for Feat",
                "unique_together": {("prerequisite_for_feat", "prerequisite")},
            },
        ),
        migrations.AddField(
            model_name="feat",
            name="feat_prerequisite",
            field=models.ManyToManyField(
                blank=True, through="feat.FeatFeatPrerequisite", to="feat.feat"
            ),
        ),
        migrations.CreateModel(
            name="FeatSkillPrerequisite",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "required_ranks",
                    models.IntegerField(
                        default=0,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                (
                    "feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feat.feat"
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="skill.skill"
                    ),
                ),
            ],
            options={
                "unique_together": {("feat", "skill")},
            },
        ),
        migrations.AddField(
            model_name="feat",
            name="skill_prerequisite",
            field=models.ManyToManyField(
                blank=True, through="feat.FeatSkillPrerequisite", to="skill.skill"
            ),
        ),
        migrations.CreateModel(
            name="FeatTypeOfFeat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feat.feat"
                    ),
                ),
                (
                    "type_of_feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="feat.typeoffeat",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Types of Feat",
                "unique_together": {("feat", "type_of_feat")},
            },
        ),
        migrations.AddField(
            model_name="feat",
            name="feat_type",
            field=models.ManyToManyField(
                through="feat.FeatTypeOfFeat", to="feat.typeoffeat"
            ),
        ),
    ]
