# Generated by Django 5.1.7 on 2025-04-12 13:46

import django.db.models.deletion
import functools
import race.models
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("character_class", "0001_initial"),
        ("common", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Size",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20, unique=True)),
                ("size_modifier", models.IntegerField(default=0)),
                ("grapple_modifier", models.IntegerField(default=0)),
                ("height_or_length", models.CharField(max_length=20)),
                ("weight", models.CharField(max_length=20)),
                ("space_ft", models.DecimalField(decimal_places=1, max_digits=3)),
                ("natural_reach_tall_ft", models.IntegerField(default=0)),
                ("natural_reach_long_ft", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ("-size_modifier",),
            },
        ),
        migrations.CreateModel(
            name="AbilityModifier",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("value", models.IntegerField()),
                (
                    "ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="common.ability"
                    ),
                ),
            ],
            options={
                "ordering": ("ability__name", "value"),
                "unique_together": {("value", "ability")},
            },
        ),
        migrations.CreateModel(
            name="CharacterType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                ("link", models.URLField(blank=True, null=True)),
                ("subtype", models.BooleanField(default=False)),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterTypeTrait",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "additional_value",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "character_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="race.charactertype",
                    ),
                ),
                (
                    "trait",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="common.trait"
                    ),
                ),
            ],
            options={
                "unique_together": {("character_type", "trait")},
            },
        ),
        migrations.AddField(
            model_name="charactertype",
            name="traits",
            field=models.ManyToManyField(
                blank=True, through="race.CharacterTypeTrait", to="common.trait"
            ),
        ),
        migrations.CreateModel(
            name="Race",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "level_adjustment",
                    models.IntegerField(
                        default=0,
                        validators=[
                            functools.partial(
                                utils.validators.validate_integer_in_range,
                                *(),
                                **{"max_value": 10, "min_value": 0},
                            )
                        ],
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RaceAbilityModifier",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "ability_modifier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="race.abilitymodifier",
                    ),
                ),
                (
                    "race",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="race.race"
                    ),
                ),
            ],
            options={
                "unique_together": {("race", "ability_modifier")},
            },
        ),
        migrations.AddField(
            model_name="race",
            name="abilities",
            field=models.ManyToManyField(
                blank=True,
                through="race.RaceAbilityModifier",
                to="race.abilitymodifier",
            ),
        ),
        migrations.CreateModel(
            name="RaceFavoredClass",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "character_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="character_class.characterclass",
                    ),
                ),
                (
                    "race",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="race.race"
                    ),
                ),
            ],
            options={
                "unique_together": {("race", "character_class")},
            },
        ),
        migrations.AddField(
            model_name="race",
            name="favored_classes",
            field=models.ManyToManyField(
                blank=True,
                through="race.RaceFavoredClass",
                to="character_class.characterclass",
            ),
        ),
        migrations.CreateModel(
            name="RaceLanguage",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("is_automatic", models.BooleanField(default=False)),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.language",
                    ),
                ),
                (
                    "race",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="race.race"
                    ),
                ),
            ],
            options={
                "unique_together": {("race", "language")},
            },
        ),
        migrations.AddField(
            model_name="race",
            name="languages",
            field=models.ManyToManyField(
                blank=True, through="race.RaceLanguage", to="common.language"
            ),
        ),
        migrations.CreateModel(
            name="RaceTrait",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "additional_value",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "race",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="race.race"
                    ),
                ),
                (
                    "trait",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="common.trait"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="race",
            name="traits",
            field=models.ManyToManyField(
                blank=True, through="race.RaceTrait", to="common.trait"
            ),
        ),
        migrations.CreateModel(
            name="RaceType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "character_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="race.charactertype",
                    ),
                ),
                (
                    "race",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="race.race"
                    ),
                ),
            ],
            options={
                "unique_together": {("race", "character_type")},
            },
        ),
        migrations.AddField(
            model_name="race",
            name="types",
            field=models.ManyToManyField(
                blank=True, through="race.RaceType", to="race.charactertype"
            ),
        ),
        migrations.AddField(
            model_name="race",
            name="size",
            field=models.ForeignKey(
                default=race.models.Size.get_default_size_id,
                on_delete=django.db.models.deletion.PROTECT,
                to="race.size",
            ),
        ),
    ]
