# Generated by Django 5.1.7 on 2025-04-12 13:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("character", "0001_initial"),
        ("character_class", "0002_initial"),
        ("common", "0001_initial"),
        ("feat", "0001_initial"),
        ("item", "0001_initial"),
        ("race", "0001_initial"),
        ("skill", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="character",
            name="race",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="race.race"
            ),
        ),
        migrations.AddField(
            model_name="characterabilityscore",
            name="ability",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="common.ability"
            ),
        ),
        migrations.AddField(
            model_name="characterabilityscore",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="ability_scores",
            field=models.ManyToManyField(
                blank=True,
                through="character.CharacterAbilityScore",
                to="common.ability",
            ),
        ),
        migrations.AddField(
            model_name="charactercharacterclass",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="charactercharacterclass",
            name="character_class",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="character_class.characterclass",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="character_classes",
            field=models.ManyToManyField(
                blank=True,
                through="character.CharacterCharacterClass",
                to="character_class.characterclass",
            ),
        ),
        migrations.AddField(
            model_name="characterfeat",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="characterfeat",
            name="feat",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="feat.feat"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="feats",
            field=models.ManyToManyField(
                blank=True, through="character.CharacterFeat", to="feat.feat"
            ),
        ),
        migrations.AddField(
            model_name="characterinventory",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="characterlanguage",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="characterlanguage",
            name="language",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="common.language"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="additionally_learned_languages",
            field=models.ManyToManyField(
                blank=True, through="character.CharacterLanguage", to="common.language"
            ),
        ),
        migrations.AddField(
            model_name="characterskill",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.character"
            ),
        ),
        migrations.AddField(
            model_name="characterskill",
            name="skill",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="skill.skill"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="skills",
            field=models.ManyToManyField(
                blank=True, through="character.CharacterSkill", to="skill.skill"
            ),
        ),
        migrations.AddField(
            model_name="characterinventory",
            name="inventory",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="character.inventory"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="inventories",
            field=models.ManyToManyField(
                blank=True,
                through="character.CharacterInventory",
                to="character.inventory",
            ),
        ),
        migrations.AddField(
            model_name="inventoryitem",
            name="inventory",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="character.inventory"
            ),
        ),
        migrations.AddField(
            model_name="inventoryitem",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="item.item"
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="items",
            field=models.ManyToManyField(
                blank=True, through="character.InventoryItem", to="item.item"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="characterabilityscore",
            unique_together={("character", "ability")},
        ),
        migrations.AlterUniqueTogether(
            name="charactercharacterclass",
            unique_together={("character", "character_class")},
        ),
    ]
