# Generated by Django 5.1.7 on 2025-04-12 13:46

import django.db.models.deletion
import functools
import item.models
import race.models
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("common", "0001_initial"),
        ("feat", "0001_initial"),
        ("race", "0001_initial"),
        ("spell", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Item",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=150, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                (
                    "weight_in_lb",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "price_in_gp",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "hardness",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                (
                    "hit_points",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        blank=True,
                        default=race.models.Size.get_default_size_id,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="race.size",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArmorType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ItemCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponDamageType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Armor",
            fields=[
                (
                    "item_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="item.item",
                    ),
                ),
                (
                    "armor_bonus",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                (
                    "max_dex_bonus",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                ("armor_check_penalty", models.IntegerField(blank=True, null=True)),
                ("spell_failure_chance", models.IntegerField(blank=True, null=True)),
                (
                    "enchantment_bonus",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
            ],
            bases=("item.item",),
        ),
        migrations.CreateModel(
            name="Weapon",
            fields=[
                (
                    "item_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="item.item",
                    ),
                ),
                ("damage", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "crit_multiplier",
                    models.IntegerField(
                        default=2,
                        validators=[
                            functools.partial(
                                utils.validators.validate_integer_in_range,
                                *(),
                                **{"max_value": 10, "min_value": 2},
                            )
                        ],
                    ),
                ),
                (
                    "crit_range",
                    models.CharField(blank=True, default="20", max_length=5, null=True),
                ),
                (
                    "range_increment_in_ft",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
                ("is_masterwork", models.BooleanField(default=False)),
                (
                    "enchantment_bonus",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[utils.validators.validate_positive_integer],
                    ),
                ),
            ],
            bases=("item.item",),
        ),
        migrations.CreateModel(
            name="ArmorMagicAbility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "caster_level_required_for_creation",
                    models.IntegerField(
                        validators=[utils.validators.validate_positive_integer]
                    ),
                ),
                (
                    "other_craft_requirements",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("cost_increase_in_bonus", models.IntegerField(blank=True, null=True)),
                (
                    "cost_increase_in_gold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "magic_aura_strength",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="spell.magicaurastrength",
                    ),
                ),
                (
                    "magic_aura_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="spell.magicschool",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Armor magic abilities",
            },
        ),
        migrations.CreateModel(
            name="ArmorMagicAbilityFeat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "armor_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="item.armormagicability",
                    ),
                ),
                (
                    "feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="feat.feat"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Required feats",
                "unique_together": {("armor_magic_ability", "feat")},
            },
        ),
        migrations.AddField(
            model_name="armormagicability",
            name="feats_required",
            field=models.ManyToManyField(
                through="item.ArmorMagicAbilityFeat", to="feat.feat"
            ),
        ),
        migrations.CreateModel(
            name="ArmorMagicAbilitySpell",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "armor_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="item.armormagicability",
                    ),
                ),
                (
                    "spell",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="spell.spell"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Required seats",
                "unique_together": {("armor_magic_ability", "spell")},
            },
        ),
        migrations.AddField(
            model_name="armormagicability",
            name="spells_required",
            field=models.ManyToManyField(
                blank=True, through="item.ArmorMagicAbilitySpell", to="spell.spell"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="category",
            field=models.ForeignKey(
                default=item.models.ItemCategory.get_default_category_id,
                on_delete=django.db.models.deletion.PROTECT,
                to="item.itemcategory",
            ),
        ),
        migrations.CreateModel(
            name="SpecialMaterial",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponMagicAbility",
            fields=[
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "caster_level_required_for_creation",
                    models.IntegerField(
                        validators=[utils.validators.validate_positive_integer]
                    ),
                ),
                (
                    "other_craft_requirements",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("cost_increase_in_bonus", models.IntegerField(blank=True, null=True)),
                (
                    "cost_increase_in_gold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "magic_aura_strength",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="spell.magicaurastrength",
                    ),
                ),
                (
                    "magic_aura_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="spell.magicschool",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.source",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Weapon magic abilities",
            },
        ),
        migrations.CreateModel(
            name="WeaponMagicAbilityFeat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "feat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="feat.feat"
                    ),
                ),
                (
                    "weapon_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="item.weaponmagicability",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Required feats",
            },
        ),
        migrations.AddField(
            model_name="weaponmagicability",
            name="feats_required",
            field=models.ManyToManyField(
                blank=True, through="item.WeaponMagicAbilityFeat", to="feat.feat"
            ),
        ),
        migrations.CreateModel(
            name="WeaponMagicAbilitySpell",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "spell",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="spell.spell"
                    ),
                ),
                (
                    "weapon_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="item.weaponmagicability",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Required spells",
            },
        ),
        migrations.AddField(
            model_name="weaponmagicability",
            name="spells_required",
            field=models.ManyToManyField(
                blank=True, through="item.WeaponMagicAbilitySpell", to="spell.spell"
            ),
        ),
        migrations.CreateModel(
            name="ArmorArmorMagicAbility",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "armor_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="item.armormagicability",
                    ),
                ),
                (
                    "armor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="item.armor"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="armor",
            name="armor_magic_ability",
            field=models.ManyToManyField(
                blank=True,
                through="item.ArmorArmorMagicAbility",
                to="item.armormagicability",
            ),
        ),
        migrations.AddField(
            model_name="armor",
            name="armor_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="item.armortype",
            ),
        ),
        migrations.AddField(
            model_name="armor",
            name="special_material",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="item.specialmaterial",
            ),
        ),
        migrations.CreateModel(
            name="WeaponWeaponMagicAbility",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "weapon_magic_ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="item.weaponmagicability",
                    ),
                ),
                (
                    "weapon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="item.weapon"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponWeaponDamageType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "weapon_damage_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="item.weapondamagetype",
                    ),
                ),
                (
                    "weapon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="item.weapon"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponWeaponCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "weapon_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="item.weaponcategory",
                    ),
                ),
                (
                    "weapon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="item.weapon"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="weapon",
            name="special_material",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="item.specialmaterial",
            ),
        ),
        migrations.AddField(
            model_name="weapon",
            name="weapon_category",
            field=models.ManyToManyField(
                blank=True,
                through="item.WeaponWeaponCategory",
                to="item.weaponcategory",
            ),
        ),
        migrations.AddField(
            model_name="weapon",
            name="weapon_damage_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="item.weapondamagetype"
            ),
        ),
        migrations.AddField(
            model_name="weapon",
            name="weapon_magic_ability",
            field=models.ManyToManyField(
                blank=True,
                through="item.WeaponWeaponMagicAbility",
                to="item.weaponmagicability",
            ),
        ),
        migrations.AddConstraint(
            model_name="armormagicability",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("cost_increase_in_bonus__isnull", False),
                    ("cost_increase_in_gold__isnull", False),
                    _connector="OR",
                ),
                name="at_least_one_not_null_ArmorMagicAbility_cost_increase_in_bonus_cost_increase_in_gold",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="weaponmagicabilityfeat",
            unique_together={("weapon_magic_ability", "feat")},
        ),
        migrations.AlterUniqueTogether(
            name="weaponmagicabilityspell",
            unique_together={("weapon_magic_ability", "spell")},
        ),
        migrations.AddConstraint(
            model_name="weaponmagicability",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("cost_increase_in_bonus__isnull", False),
                    ("cost_increase_in_gold__isnull", False),
                    _connector="OR",
                ),
                name="at_least_one_not_null_WeaponMagicAbility_cost_increase_in_bonus_cost_increase_in_gold",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="armorarmormagicability",
            unique_together={("armor", "armor_magic_ability")},
        ),
        migrations.AlterUniqueTogether(
            name="weaponweaponmagicability",
            unique_together={("weapon", "weapon_magic_ability")},
        ),
        migrations.AlterUniqueTogether(
            name="weaponweapondamagetype",
            unique_together={("weapon", "weapon_damage_type")},
        ),
        migrations.AlterUniqueTogether(
            name="weaponweaponcategory",
            unique_together={("weapon", "weapon_category")},
        ),
    ]
